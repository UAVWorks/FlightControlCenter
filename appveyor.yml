os: Visual Studio 2015
version: 1.0.{build}
environment:
  PYTHON: "C:\\Python34"

  matrix:
  - BUILD_VARIANT: debug
    QTDIR: C:\Qt\5.7\msvc2015_64

  - BUILD_VARIANT: release
    QTDIR: C:\Qt\5.7\msvc2015_64

  - BUILD_VARIANT: debug
    QTDIR: C:\Qt\5.8\msvc2015_64

  - BUILD_VARIANT: release
    QTDIR: C:\Qt\5.8\msvc2015_64

install:
  - cmd: dir C:\Qt\
  - cmd: dir C:\Qt\5.8
  - cmd: git submodule update --init --recursive
  - cmd: set INSTALL_DIR=%APPVEYOR_BUILD_FOLDER%\install
  - cmd: curl -fsS -o rclone.zip https://downloads.rclone.org/rclone-current-windows-amd64.zip && 7z e rclone.zip
  - cmd: set PATH=%PYTHON%;%PYTHON%\Scripts;%QTDIR%\bin;C:\Qt\Tools\QtCreator\bin;%PATH%;%cd%
  - cmd: set SCRIPTS_DIR=%APPVEYOR_BUILD_FOLDER%\scripts
  - cmd: dir %cd%
  - cmd: python -m pip install --upgrade pip && pip install --upgrade wheel -V && pip install --upgrade PySide easyprocess Pillow pyscreenshot pyvirtualdisplay -V
  - python --version
  - pip --version
  - qbs --version
  - ps: $screen_resolution = '1280x800'; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

build_script:
- cmd: >-

    qbs setup-toolchains --detect

    qbs setup-qt %QTDIR%\bin\qmake.exe qt

    qbs config defaultProfile qt

    qbs --file %APPVEYOR_BUILD_FOLDER% --command-echo-mode command-line --clean-install-root qbs.installRoot:%INSTALL_DIR% %BUILD_VARIANT%

    cd %INSTALL_DIR%\FlightGear_Autopilot

    windeployqt --%BUILD_VARIANT% --no-system-d3d-compiler --no-translations --no-qmltooling --qmldir %APPVEYOR_BUILD_FOLDER%\src\Gui\qml\qml-fgear\modules\FGear %INSTALL_DIR%\FlightGear_Autopilot

    windeployqt --%BUILD_VARIANT% --no-system-d3d-compiler --no-translations --no-qmltooling --qmldir %APPVEYOR_BUILD_FOLDER%\contrib\qml-material\modules\Material %INSTALL_DIR%\FlightGear_Autopilot

    IF EXIST iconengines\ ( rclone copy iconengines\ data\plugins\iconengines\ ) && IF EXIST imageformats\ ( rclone copy imageformats\ data\plugins\imageformats\ ) && IF EXIST platforms\ ( rclone copy platforms\ data\plugins\platforms\ ) && IF EXIST Qt\ ( rclone copy Qt\ data\qml\Qt\ ) && IF EXIST QtGraphicalEffects\ ( rclone copy QtGraphicalEffects\ data\qml\QtGraphicalEffects\ ) && IF EXIST QtQml\ ( rclone copy QtQml\ data\qml\QtQml\ ) && IF EXIST QtQuick\ ( rclone copy QtQuick\ data\qml\QtQuick\ ) && IF EXIST QtQuick.2\ ( rclone copy QtQuick.2\ data\qml\QtQuick.2\ )

    IF EXIST iconengines\ ( rmdir iconengines /s /q ) && IF EXIST imageformats\ ( rmdir imageformats /s /q ) && IF EXIST platforms\ ( rmdir platforms /s /q ) && IF EXIST Qt\ ( rmdir Qt /s /q ) && IF EXIST QtGraphicalEffects\ ( rmdir QtGraphicalEffects /s /q ) && IF EXIST QtQml\ ( rmdir QtQml /s /q ) && IF EXIST QtQuick\ ( rmdir QtQuick /s /q ) && IF EXIST QtQuick.2\ ( rmdir QtQuick.2 /s /q ) && IF EXIST bearer\ ( rmdir bearer /s /q )

    python -u %APPVEYOR_BUILD_FOLDER%/contrib/Qt-Qbs-Application/scripts/take_screenshot.py -f fgautopilot.exe -t 55 -o screenshot.png

    dir

artifacts:
- path: install\FlightGear_Autopilot
  name: Flightgear_Autopilot
- path: install\FlightGear_Autopilot/*.png
  name: screenshot
- path: install\FlightGear_Autopilot/*.log
  name: logs

# on_finish:
#   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
